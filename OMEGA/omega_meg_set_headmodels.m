bsDir = 'C:\Users\simon\OneDrive\Desktop\Ricerca\EEGLab';
inDir = 'D:\MEG\OMEGA_OpenNeuro';
ProtocolName = 'Omega_Study';
subject_head = 'sub-0003';
pattern = 'sub-0';  %common pattern in subject names
session = '01'; %fixed
rest_run = '01'; %fixed
source_type = 'MN';


resume();
set_common_head_model(bsDir, ProtocolName, subject_head, ...
    session, rest_run, pattern, source_type)

%sSubject = bst_get('Subject', SubjectName);
%CortexFile = sSubject.Surface(sSubject.iCortex).FileName;
%sSubject = bst_get('Subject', SubjectName);
%sCortex = in_tess_bst(CortexFile);
%sCortex.iAtlas = find(strcmpi({sCortex.Atlas.Name}, 'Desikan-Killany'));
%bst_save(file_fullpath(CortexFile), sCortex, 'v7');
%bst_memory('UnloadAll', 'Forced');
%[tmp,iScouts,tmp] = intersect({sCortex.Atlas(sCortex.iAtlas).Scouts.Label}, {'G_temp_sup-G_T_transv L', 'G_temp_sup-G_T_transv R', 'G_front_inf-Opercular L', 'G_precentral L'}); 


function resume()
    if ~brainstorm('status')
        brainstorm nogui
    end
    bst_report('Start');
end


function set_common_head_model(bsDir, ProtocolName, subject_head, ...
    session, rest_run, pattern, source_type)
    dk={'bankssts L','bankssts R','caudalanteriorcingulate L',...
        'caudalanteriorcingulate R','caudalmiddlefrontal L',...
        'caudalmiddlefrontal R','cuneus L','cuneus R',...
        'entorhinal L','entorhinal R','frontalpole L','frontalpole R',...
        'fusiform L','fusiform R','inferiorparietal L',...
        'inferiorparietal R','inferiortemporal L','inferiortemporal R',...
        'insula L','insula R','isthmuscingulate L',...
        'isthmuscingulate R','lateraloccipital L','lateraloccipital R',...
        'lateralorbitofrontal L','lateralorbitofrontal R','lingual L',...
        'lingual R','medialorbitofrontal L','medialorbitofrontal R',...
        'middletemporal L','middletemporal R','paracentral L',...
        'paracentral R','parahippocampal L','parahippocampal R',...
        'parsopercularis L','parsopercularis R','parsorbitalis L',...
        'parsorbitalis R','parstriangularis L','parstriangularis R',...
        'pericalcarine L','pericalcarine R','postcentral L',...
        'postcentral R','posteriorcingulate L','posteriorcingulate R',...
        'precentral L','precentral R','precuneus L','precuneus R',...
        'rostralanteriorcingulate L','rostralanteriorcingulate R',...
        'rostralmiddlefrontal L','rostralmiddlefrontal R',...
        'superiorfrontal L','superiorfrontal R','superiorparietal L',...
        'superiorparietal R','superiortemporal L','superiortemporal R',...
        'supramarginal L','supramarginal R','temporalpole L',...
        'temporalpole R','transversetemporal L','transversetemporal R'};
    sSubject = bst_get('Subject', subject_head);
    CortexFile = sSubject.Surface(sSubject.iCortex).FileName;
    sCortex = in_tess_bst(CortexFile);
    sCortex.iAtlas = find(strcmpi({sCortex.Atlas.Name}, 'Desikan-Killiany'));
    bst_save(file_fullpath(CortexFile), sCortex, 'v7');

    head_model = strcat(subject_head, '/@raw', subject_head, '_ses-', ...
        session, '_task-rest_run-', rest_run, ...
        '_meg_notch_high/headmodel_surf_os_meg.mat');
    dataDir = strcat(bsDir, filesep, ProtocolName, filesep, 'data', ...
        filesep);
    cases = dir(fullfile(dataDir));
    for i = 1:length(cases)
        if contains(string(cases(i).name), string(pattern))
            sSubject = bst_get('Subject', cases(i).name);
            subDir = strcat(dataDir, cases(i).name, filesep, '@raw', ...
                cases(i).name, ...
                '_ses-01_task-rest_run-01_meg_notch_high', filesep);
            files = dir(fullfile(subDir));
            for j = 1:length(files)
                if contains(string(files(j).name), "KERNEL") & contains(string(files(j).name), source_type)
                    fName = strcat(subDir, files(j).name);
                    aux = load(fName);
                    aux.HeadModelFile = head_model;
                    save(fName,'-struct','aux')
                    %[tmp,iScouts,tmp] = intersect({sCortex.Atlas(sCortex.iAtlas).Scouts.Label}, dk); 
                    %hFigScouts = view_scouts({fName}, iScouts);
                    sFilesAvgScoutV1 = bst_process('CallProcess', 'process_extract_scout', 1, [], ...
                        'timewindow',     [-0.5, 1.2], ...
                        'scouts',         {'Brodmann-thresh', {'V1 R'}}, ...
                        'scoutfunc',      1, ...  % Mean
                        'isflip',         1, ...
                        'isnorm',         0, ...
                        'concatenate',    1, ...
                        'save',           1, ...
                        'addrowcomment',  1, ...
                        'addfilecomment', 1);
                end
            end
        end
    end
end